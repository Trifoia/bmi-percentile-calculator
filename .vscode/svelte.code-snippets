{
	// Place your svelte-practice workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Svlete If Statement": {
    "description": "If statement in Svelte syntax",
		"prefix": "ifsvlete",
		"body": [
			"{#if $1}",
			"  $0",
			"{/if}"
		],
	},
	"Svlete Else": {
    "description": "Else statement in Svelte syntax",
		"prefix": "elsesvelte",
		"body": [
			"{:else}",
			"  $0"
		],
	},
	"Svelte Elese If": {
    "description": "Else If statement in Svelte syntax",
		"prefix": "elseifsvelte",
		"body": [
			"{:else if $1}",
			"  $0"
		]
	},
	"Svelte Each": {
    "description": "Each statement in Svelte syntax",
		"prefix": "eachsvelte",
		"body": [
			"{#each $1 as $2}",
			"  $0",
			"{/each}"
		]
	},
	"Svelte Await": {
    "description": "Await statement in Svelte syntax",
		"prefix": "awaitsvelte",
		"body": [
			"{#await $1 ${2:then $3}}",
			"  $0",
			"{/await}"
		]
	},
	"Svelte Then": {
    "description": "Then statement in Svelte syntax",
		"prefix": "thensvelte",
		"body": [
			"{:then $1}",
			"  $0"
		]
	},
	"Svelte Catch": {
    "description": "Catch statement in Svelte syntax",
		"prefix": "catchsvelte",
		"body": [
			"{:catch $1}",
			"  $0"
		]
	}
}
